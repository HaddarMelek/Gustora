{# templates/dashboard/admin_dashboard.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}Admin Dashboard{% endblock %}

{% block body %}
    <h1>Welcome, Admin!</h1>
    <p>This is your admin dashboard.</p>

    <p>Email - {{ user.email }}</p>
    <p>Phone Number - +{{ user.countryCode }} {{ user.phoneNumber }}</p>

    <a href="{{ path('app_category_index') }}" class="btn btn-primary">
        Manage Categories
    </a>
    <a href="{{ path('app_product_index') }}" class="btn btn-success">
        <i class="fas fa-boxes me-2"></i> Manage Products
    </a>
    <a href="{{ path('app_logout') }}" class="btn btn-danger">Logout</a>
{% endblock %}

{% block javascripts %}
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        const generateOTP = async () => {
            try {
                const response = await fetch("{{ path('generateOTP') }}", {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    }
                });

                const contentType = response.headers.get('content-type');
                if (!contentType || !contentType.includes('application/json')) {
                    throw new Error('Server returned invalid content type');
                }

                const data = await response.json();
                if (!response.ok) {
                    throw new Error(data.error || 'Failed to send OTP');
                }

                return true;
            } catch (error) {
                console.error('OTP Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message
                });
                return false;
            }
        };

        const verifyOTP = async (otp) => {
            try {
                const response = await fetch("{{ path('verifyOTP') }}", {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ otp: otp.trim() })
                });

                const data = await response.json();
                if (!response.ok) {
                    throw new Error(data.error || 'Verification failed');
                }

                return data;
            } catch (error) {
                console.error('Verification error:', error);
                throw error;
            }
        };

        const showOTPForm = async () => {
            Swal.fire({
                title: 'Sending OTP...',
                text: 'Please wait while we send the code to your phone',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            const otpSent = await generateOTP();
            if (!otpSent) return;

            Swal.fire({
                title: 'Verify Your Phone Number',
                html: `Please enter the verification code sent to<br>+{{ user.countryCode }} {{ user.phoneNumber }}`,
                input: 'text',
                inputAttributes: {
                    autocapitalize: 'off',
                    maxlength: 6,
                    minlength: 6,
                    placeholder: 'Enter the 6-digit code'
                },
                showCancelButton: false,
                confirmButtonText: 'Verify',
                showLoaderOnConfirm: true,
                allowOutsideClick: false,
                allowEscapeKey: false,
                preConfirm: async (otp) => {
                    if (!/^\d{6}$/.test(otp)) {
                        Swal.showValidationMessage('Please enter a valid 6-digit code');
                        return false;
                    }
                    try {
                        return await verifyOTP(otp);
                    } catch (error) {
                        Swal.showValidationMessage(error.message);
                        return false;
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Success',
                        text: result.value.message,
                        icon: 'success'
                    });
                }
            });
        };

        document.addEventListener('DOMContentLoaded', () => {
            showOTPForm();
        });
    </script>
{% endblock %}
